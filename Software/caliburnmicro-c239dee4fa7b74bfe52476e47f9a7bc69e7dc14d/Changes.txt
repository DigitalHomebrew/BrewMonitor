2.0.0
-DefaultCloseStrategy fails with null ref exception (issue 350)
-Unable to cast object of type 'MS.Internal.InternalTransform' to type 'System.Windows.Media.Transform' (issue 352)
-add DebugLog
-add IResult decorators
-add DelegateResult
-workaround issue EntryPointNotFoundException in Design Mode


2.0.0-alpha
-portable library net45+sl5+win8+wp8 (issue 259), SL4, WP71 and NET40 will not be supported
-Support Windows 8.1 (issue 336) and use new Behavior SDK (issue 338)
-Fix CultureInfo in CoerceValue
-Remove Bootstrapper<TRootModel> and PhoneBootstrapper, use BootstrapperBase and PhoneBootstrapperBase
-Remove package builder (will not work because portable/platform split)
-Remove EventAggregator PublicationThreadMarshaller and Publish() without marshaller
-Add EventAggregatorExtensions (PublishOnCurrentThread, PublishOnBackgroundThread, PublishOnUIThread, BeginPublishOnUIThread and PublishOnUIThreadAsync)
-Fix OnViewReady should be called on child views too (issue 292)
-Screen only have one TryClose(bool? dialogResult = null)
-Coroutine uses CoroutineExecutionContext instead of ActionExecutionContext (as it is not portable)
-SettingsService.RegisterCommand renamed to RegisterFlyoutCommand
-CallistoSettingsWindowManager removed, replaced with SettingsWindowManager
-Dependency on Callisto removed
-Dependency on Windows.UI.Interactivity removed, replaced with 8.1 Behaviours SDK.
-NotifyOfPropertyChange() does not support [CallerMemberName] at the moment
-Fix Memory leak in ActivateWith() and DeactivateWith()
-View/ViewModel-Locator performance improvement (issue 342)


1.6 (not released)
-Revert BootstrapperBase.Application.set() to be protected (issue 325)
-add some more ContainerExtensions
-allow to set all SettingsFlyout properties (WinRT only)
-Extract FindTypeByNames from ViewLocator and ViewModelLocator to AssemblySource
-Provide Parameter.Owner property protected access (issue 328)
-Fix NullReferenceException in ActionMessage.SetMethodBinding() (issue 329)
-Update Windows.UI.Interactivity to 1.3.0 (WinRT only)
-Update Callisto to 1.3.1 (WinRT only)
-Fix possible NullReferenceException in Parameter
-Fix Bind to ToString Value (for Phone)
-Fix OnUIThreadAsync(action).Wait() causes an infinite wait (issue 335)
-Fix exception in XnaSoundEffectPlayer on WP8


1.5.2
-Fix Task.AsResult() extension issues when Task is already completed or the coroutine is not executed on the UI thread
-BuildUp IResult in ExecuteAsync() (issue 314)
-fix UriBuilder.WithParam() ignores default values of value types (issue 317)
-[Tim Heuer] Modifying CallistoSettingsWindowManager to leverage automatic settings from AppxManifest for the app.
-change PhoneContainer to be more like WinRTContainer and add parameter checks (issue 307)
-use SimpleContainer for WPF and Silverlight (instead of MEF in Start package)
-make PropertyChangedBase.OnPropertyChanged protected (issue 291)
-give more info when IoC is not initialized (issue 313)
-Allow to specify window settings on DisplayRootViewFor() (WPF only)
-Make SimpleContainer available for all platforms
-add HelloSimpleContainer sample
-add DisplayRootViewFor<TViewModel>() overload
-add IoC.GetAll<T>() (issue 313)
-Event Aggregator now throws an ArguementNullException when any methods with parameters receive null (fails fast).
-Changed Handler class in EventAggregator to have an IsDead property (needed for the above to work).
-Changed parameter names in all EventAggregator methods from instance to message where dealing with the message.
-Added HandlerExistsFor to EventAggregator class for checking the for the existence of a specified handler.
-Now it is possible to use a custom AppBarButton/AppBarMenuItem implementation with our ActionMessage. All you need to do is to implement the Interface.
-More unit test coverage
